{"remainingRequest":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Med/Desktop/Perso/WEB/vue-interface/src/components/Passeport/AuthorizedClients.vue?vue&type=style&index=0&id=3a56fdb3&scoped=true&lang=css&","dependencies":[{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/src/components/Passeport/AuthorizedClients.vue","mtime":1584056465224},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/postcss-loader/src/index.js","mtime":1583024838173},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/cache-loader/dist/cjs.js","mtime":1583024834205},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hY3Rpb24tbGluayB7CiAgICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["AuthorizedClients.vue"],"names":[],"mappings":";AACA;AACA;AACA","file":"AuthorizedClients.vue","sourceRoot":"src/components/Passeport","sourcesContent":["<style scoped>\n    .action-link {\n        cursor: pointer;\n    }\n</style>\n\n<template>\n    <div>\n        <div v-if=\"tokens.length > 0\">\n            <div class=\"card card-default\">\n                <div class=\"card-header\">Authorized Applications</div>\n\n                <div class=\"card-body\">\n                    <!-- Authorized Tokens -->\n                    <table class=\"table table-borderless mb-0\">\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Scopes</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            <tr v-for=\"token in tokens\">\n                                <!-- Client Name -->\n                                <td style=\"vertical-align: middle;\">\n                                    {{ token.client.name }}\n                                </td>\n\n                                <!-- Scopes -->\n                                <td style=\"vertical-align: middle;\">\n                                    <span v-if=\"token.scopes.length > 0\">\n                                        {{ token.scopes.join(', ') }}\n                                    </span>\n                                </td>\n\n                                <!-- Revoke Button -->\n                                <td style=\"vertical-align: middle;\">\n                                    <a class=\"action-link text-danger\" @click=\"revoke(token)\">\n                                        Revoke\n                                    </a>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    \n    import axios from 'axios'\n\n    export default {\n        /*\n         * The component's data.\n         */\n        data() {\n            return {\n                tokens: []\n            };\n        },\n\n        /**\n         * Prepare the component (Vue 1.x).\n         */\n        ready() {\n            this.prepareComponent();\n        },\n\n        /**\n         * Prepare the component (Vue 2.x).\n         */\n        mounted() {\n            this.prepareComponent();\n        },\n\n        methods: {\n            /**\n             * Prepare the component (Vue 2.x).\n             */\n            prepareComponent() {\n                this.getTokens();\n            },\n\n            /**\n             * Get all of the authorized tokens for the user.\n             */\n            getTokens() {\n                axios.get(process.env.VUE_APP_BASE_API_URL+'/oauth/tokens')\n                        .then(response => {\n                            this.tokens = response.data;\n                        });\n            },\n\n            /**\n             * Revoke the given token.\n             */\n            revoke(token) {\n                axios.delete(process.env.VUE_APP_BASE_API_URL+'/oauth/tokens/' + token.id)\n                        .then(response => {\n                            this.getTokens();\n                        });\n            }\n        }\n    }\n</script>\n"]}]}