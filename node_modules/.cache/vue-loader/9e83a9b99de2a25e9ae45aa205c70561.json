{"remainingRequest":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Med/Desktop/Perso/WEB/vue-interface/src/components/Passeport/Clients.vue?vue&type=template&id=5316ebce&scoped=true&","dependencies":[{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/src/components/Passeport/Clients.vue","mtime":1584056423853},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/cache-loader/dist/cjs.js","mtime":1583024834205},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/cache-loader/dist/cjs.js","mtime":1583024834205},{"path":"/Users/Med/Desktop/Perso/WEB/vue-interface/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}